package app.core.util;

import java.io.File;
import java.io.FileOutputStream;
import java.util.Date;

//import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
//import com.itextpdf.text.BaseColor;
//import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
//import com.itextpdf.text.List;
//import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
//import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import app.core.entities.Purchase;
import app.core.entities.PurchaseEntry;


public class FirstPdf {	
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    //private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
    //        Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

	public static void createPdfFile(Purchase purchase) {
        try {
            String path = new File("src/main/resources").getAbsolutePath();        	
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(path+"/confirm.pdf"));
            document.open();
            addMetaData(document);
 //           addTitlePage(document);
            addContent(document,purchase);
            Image image = Image.getInstance(path+"/Logo.jpg");
            image.setAbsolutePosition(36, 750);
            document.add(image);
            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document) {
        document.addTitle("Indy Fashion");
        document.addSubject("Confirmation Email");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("Asher Plotnik");
        document.addCreator("Asher Plotnik");
    }

//    private static void addTitlePage(Document document)
//            throws DocumentException {
//        
//    }
    

    private static void addContent(Document document, Purchase purchase) throws DocumentException {
    	Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 3);
        // Lets write a big header
        preface.add(new Paragraph("Indy fashion - Confirmation Email", catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph(new Date().toString(),smallBold));
        addEmptyLine(preface, 1);
        

        preface.add(new Paragraph("Customers Details: ", subFont));
       
        preface.add(new Paragraph("Name: "+purchase.getUser().getUsername()));
        preface.add(new Paragraph("Address: "+purchase.getShipping()));
        preface.add(new Paragraph("Email: "+purchase.getUser().getEmail()));
        preface.add(new Paragraph("Phone: "+purchase.getUser().getPhone()));
        preface.add(new Paragraph("Customer Number: "+purchase.getUser().getId()));
        // createList(subCatPart);
        
        Paragraph paragraph = new Paragraph("Order Details: Order #"+String.valueOf(purchase.getId()));
        paragraph.setAlignment(Element.ALIGN_CENTER);
        addEmptyLine(paragraph, 1);
        preface.add(paragraph);
//        subCatPart.add(paragraph);

        // add a table
        createTable(preface, purchase);

        // now add all this to the document
      document.add(preface);

        // Next section
//        anchor = new Anchor("Second Chapter", catFont);
//        anchor.setName("Second Chapter");
        // Second parameter is the number of the chapter
//        catPart = new Chapter(new Paragraph(anchor), 1);
//
//        subPara = new Paragraph("Subcategory", subFont);
//        subCatPart = catPart.addSection(subPara);
//        subCatPart.add(new Paragraph("This is a very important message"));

        // now add all this to the document
//        document.add(catPart);

    }

    private static void createTable(Paragraph preface, Purchase purchase)
            throws BadElementException {
        PdfPTable table = new PdfPTable(5);

//         t.setBorderColor(BaseColor.GRAY);
//         t.setPadding(4);
//         t.setSpacing(4);
//         t.setBorderWidth(1);
        PdfPCell c1;
        c1 = new PdfPCell(new Phrase("CODE"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("VARIATION"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("QUANTITY"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        c1 = new PdfPCell(new Phrase("PRICE"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        c1 = new PdfPCell(new Phrase("TOTAL"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
       
        table.setHeaderRows(1);
        double count = 0;
        for (PurchaseEntry entry : purchase.getEntries()) {
        	table.addCell(entry.getCode());
            table.addCell(entry.getVariation());
            table.addCell(String.valueOf(entry.getQuantity()));
            table.addCell(String.valueOf(entry.getPrice()));
            table.addCell(String.valueOf(entry.getPrice()*entry.getQuantity()));
            count += entry.getPrice()*entry.getQuantity();
        }
        table.addCell("");
        table.addCell("");
        table.addCell("");
        table.addCell("SUBTOTAL: ");
        table.addCell(String.valueOf(count));
        
        preface.add(table);
    }

//    private static void createList(Section subCatPart) {
//        List list = new List(true, false, 10);
//        list.add(new ListItem("First point"));
//        list.add(new ListItem("Second point"));
//        list.add(new ListItem("Third point"));
//        subCatPart.add(list);
//    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}